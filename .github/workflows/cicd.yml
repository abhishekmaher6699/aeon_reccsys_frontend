name: Aeon app

on:
    push:
      branches:
        - main 

jobs:
  api-tests:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Test API Endpoints
      run: |
          # Test GET endpoint
          response=$(curl -s -o /dev/null -w "%{http_code}" http://35.173.126.231:8000/reccomend_with_url/?url=https://aeon.co/essays/how-to-live-on-the-edge-of-a-disappearing-coastline)
          if [ "$response" -ne 200 ]; then
            echo "GET endpoint1 failed with status $response"
            exit 1
          fi
          echo "GET endpoint1 passed with status $response"

          response=$(curl -s -o /dev/null -w "%{http_code}" http://35.173.126.231:8000/reccomend_with_prompt/?prompt=india)
          if [ "$response" -ne 200 ]; then
            echo "GET endpoint1 failed with status $response"
            exit 1
          fi
          echo "GET endpoint1 passed with status $response"


  build-and-deploy:
    runs-on: ubuntu-latest
    needs: api-tests

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Login to AWS ECR
      run: |
        aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 529088280615.dkr.ecr.us-east-1.amazonaws.com

    - name: Build Docker image
      if: success()
      run: |
        docker build -t aeonapp .

    - name: Tag Docker image
      if: success()
      run: |
        docker tag aeonapp:latest 529088280615.dkr.ecr.us-east-1.amazonaws.com/aeonapp:latest

    - name: Push Docker image to AWS ECR
      if: success()
      run: |
        docker push 529088280615.dkr.ecr.us-east-1.amazonaws.com/aeonapp:latest

    - name: Set up SSH agent
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}

    - name: Deploy Docker image to EC2
      if: success()
      run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
                # Update and install docker
            sudo apt-get update -y
            sudo apt-get install -y docker.io curl unzip
            sudo systemctl start docker
            sudo systemctl enable docker
            sudo usermod -aG docker ubuntu
            
            # Install AWS CLI v2
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip -o awscliv2.zip
            sudo ./aws/install --update
                    
            # Configure AWS credentials
            export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
            export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
            export AWS_DEFAULT_REGION=us-east-1
            
            # Clean up existing containers safely
            if [ "$(sudo docker ps -aq -f name=aeonapp)" ]; then
              sudo docker rm -f $(sudo docker ps -aq -f name=aeonapp)
            fi
            
            # Clean up unused resources
            sudo docker system prune -af --volumes
            
            # Login to ECR
            aws ecr get-login-password --region us-east-1 | sudo docker login --username AWS --password-stdin 529088280615.dkr.ecr.us-east-1.amazonaws.com
            
            # Pull and run the new container
            sudo docker pull 529088280615.dkr.ecr.us-east-1.amazonaws.com/aeonapp:latest
            
            sudo docker run -d -p 3000:3000 \
              --name aeonapp-$(date +%Y%m%d-%H%M%S) \
              529088280615.dkr.ecr.us-east-1.amazonaws.com/aeonapp:latest
            
            # Verify deployment
            sudo docker ps | grep aeonapp

            rm -rf aws awscliv2.zip
          EOF